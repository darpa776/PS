#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <queue>
using namespace std;
int n,L;
int map[100][100];
int ans = 0;
//vector<pair<int, int>> slide;

int main()
{
	cin >> n>> L;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> map[i][j];
		}
	}
	//**경사로는 위로 놓을 수도 있고 아래로 놓을 수도 있다.
	//가로방향으로 길이 있는지 알아보자
	int length = 1;
	for (int i = 0; i < n; i++) {
		for (int j = 1; j < n; j++) {
			int height = abs(map[i][j - 1] - map[i][j]);
			if (height == 0) {//평평한 길이면
				length++;
			}
			if (height == 1) {//1이 차이나면 오르막길인지 내리막길인지 찾아보자
				if (map[i][j - 1] - map[i][j] == -1) {//오르막길
					if (length >= L) {//이때까지 놓을 길이가 충분했으면
						//경사로를 놓고 거기서부터 다시 평평한 길이를 잰다.
						length = 1;
					}
					else {
						length = 1;
						ans--;
						break;
					}
				}
				else if (map[i][j - 1] - map[i][j] == 1) {//내리막길
					
					int flag = 0;
					for (int l = 0; l < L; l++) {
						if (map[i][j] != map[i][j+l]) {//현재 위치부터 다시 평평한지 알아보자
							flag = 1;
						}
						
					}
					if (flag) {
						length = 1;
						ans--;
						break;
					}
					if (flag == 0) {
						//만약 끝까지 평평하다면
						j += L-1;
						length = 0;
					}
					
				}
				 
			}
			if (height >= 2) {//2 이상이 차이나면 길은 만들 수 없다.
				ans--;
				length = 1;
				break;
			}
		}
		ans++;
		length = 1;
	}
	
	//세로방향으로 길이 있는지 알아보자
	length = 1;
	for (int j = 0; j < n; j++) {
		for (int i = 1; i < n; i++) {
			int height = abs(map[i-1][j] - map[i][j]);
			if (height == 0) {//평평한 길이면
				length++;
			}
			if (height == 1) {//1이 차이나면 오르막길인지 내리막길인지 찾아보자
				if (map[i-1][j] - map[i][j] == -1) {//오르막길
					if (length >= L) {//이때까지 놓을 길이가 충분했으면
						//경사로를 놓고 거기서부터 다시 평평한 길이를 잰다.
						length = 1;
					}
					else {
						length = 1;
						ans--;
						break;
					}
				}
				else if (map[i-1][j] - map[i][j] == 1) {//내리막길
					
					int flag = 0;
					for (int l = 0; l < L; l++) {
						if (map[i][j] != map[i+l][j]) {//현재 위치부터 다시 평평한지 알아보자
							flag = 1;
						}
						
					}
					if (flag) {
						length = 1;
						ans--;
						break;
					}
					if (flag == 0) {
						//만약 끝까지 평평하다면
						i += L-1;
						length = 0;
					}

				}

			}
			if (height >= 2) {//2 이상이 차이나면 길은 만들 수 없다.
				ans--;
				length = 1;
				break;
			}
		}
		ans++;
		length = 1;
	}

	
	
	cout << ans << endl;
	return 0;
}
